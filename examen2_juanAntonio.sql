-- MySQL Script generated by MySQL Workbench
-- 05/07/15 18:59:44
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema restaurante
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema restaurante
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `restaurante` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `restaurante` ;

-- -----------------------------------------------------
-- Table `restaurante`.`entrada`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`entrada` (
  `identrada` INT NOT NULL,
  `Entrada` VARCHAR(45) NULL,
  `precio` DOUBLE NULL,
  PRIMARY KEY (`identrada`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`Platillo_Fuerte`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`Platillo_Fuerte` (
  `idplatillo` INT NOT NULL,
  `Platillo fuerte` VARCHAR(45) NULL,
  `precio` DOUBLE NULL,
  PRIMARY KEY (`idplatillo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`bebidas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`bebidas` (
  `idbebida` INT NOT NULL,
  `Bebida` VARCHAR(45) NULL,
  `precio` DOUBLE NULL,
  PRIMARY KEY (`idbebida`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`postres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`postres` (
  `idpostre` INT NOT NULL,
  `Postre` VARCHAR(45) NULL,
  `precio` DOUBLE NULL,
  PRIMARY KEY (`idpostre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`Adicionales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`Adicionales` (
  `idadicional` INT NOT NULL,
  `Adicionales` VARCHAR(45) NULL,
  `precio` DOUBLE NULL,
  PRIMARY KEY (`idadicional`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`estatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`estatus` (
  `idtipoS` INT NOT NULL,
  `Estatus` VARCHAR(45) NULL,
  PRIMARY KEY (`idtipoS`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`Mesa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`Mesa` (
  `idMesa` INT NOT NULL,
  `no_mesa` VARCHAR(45) NULL,
  `orden_idorden` INT NOT NULL,
  PRIMARY KEY (`idMesa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`cliente` (
  `idcliente` INT NOT NULL,
  `Nombre` VARCHAR(45) NULL,
  `Mesa_idMesa` INT NOT NULL,
  PRIMARY KEY (`idcliente`),
  INDEX `fk_cliente_Mesa1_idx` (`Mesa_idMesa` ASC),
  CONSTRAINT `fk_cliente_Mesa1`
    FOREIGN KEY (`Mesa_idMesa`)
    REFERENCES `restaurante`.`Mesa` (`idMesa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`orden` (
  `idorden` INT NOT NULL,
  `cliente_idcliente` INT NOT NULL,
  `postres_idpostre` INT NOT NULL,
  `entrada_identrada` INT NOT NULL,
  `Platillo_Fuerte_idplatillo` INT NOT NULL,
  `bebidas_idbebida` INT NOT NULL,
  `Adicionales_idadicional` INT NOT NULL,
  `estatus_idtipoS` INT NOT NULL,
  `cantidad de personas` VARCHAR(45) NULL,
  PRIMARY KEY (`idorden`),
  INDEX `fk_orden_cliente1_idx` (`cliente_idcliente` ASC),
  INDEX `fk_orden_postres1_idx` (`postres_idpostre` ASC),
  INDEX `fk_orden_entrada1_idx` (`entrada_identrada` ASC),
  INDEX `fk_orden_Platillo_Fuerte1_idx` (`Platillo_Fuerte_idplatillo` ASC),
  INDEX `fk_orden_bebidas1_idx` (`bebidas_idbebida` ASC),
  INDEX `fk_orden_Adicionales1_idx` (`Adicionales_idadicional` ASC),
  INDEX `fk_orden_estatus1_idx` (`estatus_idtipoS` ASC),
  CONSTRAINT `fk_orden_cliente1`
    FOREIGN KEY (`cliente_idcliente`)
    REFERENCES `restaurante`.`cliente` (`idcliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_postres1`
    FOREIGN KEY (`postres_idpostre`)
    REFERENCES `restaurante`.`postres` (`idpostre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_entrada1`
    FOREIGN KEY (`entrada_identrada`)
    REFERENCES `restaurante`.`entrada` (`identrada`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_Platillo_Fuerte1`
    FOREIGN KEY (`Platillo_Fuerte_idplatillo`)
    REFERENCES `restaurante`.`Platillo_Fuerte` (`idplatillo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_bebidas1`
    FOREIGN KEY (`bebidas_idbebida`)
    REFERENCES `restaurante`.`bebidas` (`idbebida`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_Adicionales1`
    FOREIGN KEY (`Adicionales_idadicional`)
    REFERENCES `restaurante`.`Adicionales` (`idadicional`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_estatus1`
    FOREIGN KEY (`estatus_idtipoS`)
    REFERENCES `restaurante`.`estatus` (`idtipoS`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`factura` (
  `idfactura` INT NOT NULL,
  `cliente_idcliente` INT NOT NULL,
  `orden_idorden` INT NOT NULL,
  PRIMARY KEY (`idfactura`),
  INDEX `fk_factura_cliente1_idx` (`cliente_idcliente` ASC),
  INDEX `fk_factura_orden1_idx` (`orden_idorden` ASC),
  CONSTRAINT `fk_factura_cliente1`
    FOREIGN KEY (`cliente_idcliente`)
    REFERENCES `restaurante`.`cliente` (`idcliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_factura_orden1`
    FOREIGN KEY (`orden_idorden`)
    REFERENCES `restaurante`.`orden` (`idorden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `restaurante`.`ornedes_mesa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `restaurante`.`ornedes_mesa` (
  `orden_idorden` INT NOT NULL,
  `Mesa_idMesa` INT NOT NULL,
  PRIMARY KEY (`orden_idorden`, `Mesa_idMesa`),
  INDEX `fk_orden_has_Mesa_Mesa1_idx` (`Mesa_idMesa` ASC),
  INDEX `fk_orden_has_Mesa_orden1_idx` (`orden_idorden` ASC),
  CONSTRAINT `fk_orden_has_Mesa_orden1`
    FOREIGN KEY (`orden_idorden`)
    REFERENCES `restaurante`.`orden` (`idorden`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_has_Mesa_Mesa1`
    FOREIGN KEY (`Mesa_idMesa`)
    REFERENCES `restaurante`.`Mesa` (`idMesa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;




INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('1', 'refresco al tiempo', '10');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('2', 'agual al tiempo', '5');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('3', 'cerveza al tiempo', '15');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('4', 'refresco frio', '15');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('5', 'agura fria', '10');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('6', 'cerveza fria', '25');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('7', 'refresco con hielo', '30');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('8', 'agua con hielo', '25');
INSERT INTO `restaurante`.`bebidas` (`idbebida`, `Bebida`, `precio`) VALUES ('9', 'cerveza con hielo', '40');

INSERT INTO `restaurante`.`postres` (`idpostre`, `Postre`, `precio`) VALUES ('1', 'flan napo', '20');
INSERT INTO `restaurante`.`postres` (`idpostre`, `Postre`, `precio`) VALUES ('2', 'pastel 3 leche', '30');
INSERT INTO `restaurante`.`postres` (`idpostre`, `Postre`, `precio`) VALUES ('3', 'copa helado', '20');
INSERT INTO `restaurante`.`postres` (`idpostre`, `Postre`, `precio`) VALUES ('4', 'copa fruta', '15');

INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('1', 'capturada');
INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('2', 'preparacion Estatus');
INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('3', 'enrada lista');
INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('4', 'prepacion plaoto fuerte');
INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('5', 'p fuerte listo');
INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('6', 'prepacion Estatus');
INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('7', 'Estatus listo');
INSERT INTO `restaurante`.`estatus` (`idtipoS`, `Estatus`) VALUES ('8', 'pagada');


INSERT INTO `restaurante`.`platillo_fuerte` (`idplatillo`, `Platillo fuerte`, `precio`) VALUES ('1', 'pollo sin picante', '100');
INSERT INTO `restaurante`.`platillo_fuerte` (`idplatillo`, `Platillo fuerte`, `precio`) VALUES ('2', 'pollo poco picante', '150');
INSERT INTO `restaurante`.`platillo_fuerte` (`idplatillo`, `Platillo fuerte`, `precio`) VALUES ('3', 'pollo muy picante', '200');
INSERT INTO `restaurante`.`platillo_fuerte` (`idplatillo`, `Platillo fuerte`, `precio`) VALUES ('4', 'carne sin picante', '150');
INSERT INTO `restaurante`.`platillo_fuerte` (`idplatillo`, `Platillo fuerte`, `precio`) VALUES ('5', 'carne poco picante', '200');
INSERT INTO `restaurante`.`platillo_fuerte` (`idplatillo`, `Platillo fuerte`, `precio`) VALUES ('6', 'carne muy picante', '250');

INSERT INTO `restaurante`.`adicionales` (`idadicional`, `Adicionales`, `precio`) VALUES ('1', 'arroz', '20');
INSERT INTO `restaurante`.`adicionales` (`idadicional`, `Adicionales`, `precio`) VALUES ('2', 'frijoles', '20');
INSERT INTO `restaurante`.`adicionales` (`idadicional`, `Adicionales`, `precio`) VALUES ('3', 'elotes', '10');
INSERT INTO `restaurante`.`adicionales` (`idadicional`, `Adicionales`, `precio`) VALUES ('4', 'verduras ', '15');
INSERT INTO `restaurante`.`adicionales` (`idadicional`, `Adicionales`, `precio`) VALUES ('5', 'papas fritas', '35');
INSERT INTO `restaurante`.`adicionales` (`idadicional`, `Adicionales`, `precio`) VALUES ('6', 'ninguno', '0');


INSERT INTO `restaurante`.`entrada` (`identrada`, `Entrada`, `precio`) VALUES ('1', 'arroz con frijoles', '30');
INSERT INTO `restaurante`.`entrada` (`identrada`, `Entrada`, `precio`) VALUES ('2', 'verduras con elote', '20');
INSERT INTO `restaurante`.`entrada` (`identrada`, `Entrada`, `precio`) VALUES ('3', 'papas fritas', '25');


ALTER TABLE `restaurante`.`cliente` 
DROP FOREIGN KEY `fk_cliente_Mesa1`;
ALTER TABLE `restaurante`.`cliente` 
DROP COLUMN `Mesa_idMesa`,
DROP INDEX `fk_cliente_Mesa1_idx` ;

INSERT INTO `restaurante`.`cliente` (`idcliente`, `Nombre`) VALUES ('1', 'Juan');
INSERT INTO `restaurante`.`cliente` (`idcliente`, `Nombre`) VALUES ('2', 'Nadia');
INSERT INTO `restaurante`.`cliente` (`idcliente`, `Nombre`) VALUES ('3', 'Alan');

INSERT INTO `restaurante`.`mesa` (`idMesa`, `no_mesa`, `orden_idorden`) VALUES ('1', '1', '1');
INSERT INTO `restaurante`.`mesa` (`idMesa`, `no_mesa`, `orden_idorden`) VALUES ('2', '2', '2');
INSERT INTO `restaurante`.`mesa` (`idMesa`, `no_mesa`, `orden_idorden`) VALUES ('3', '3', '3');


INSERT INTO `restaurante`.`orden` (`idorden`, `cliente_idcliente`, `postres_idpostre`, `entrada_identrada`, `Platillo_Fuerte_idplatillo`, `bebidas_idbebida`, `Adicionales_idadicional`, `estatus_idtipoS`, `cantidad de personas`) VALUES ('1', '1', '3', '2', '4', '5', '1', '1', '1');
INSERT INTO `restaurante`.`orden` (`idorden`, `cliente_idcliente`, `postres_idpostre`, `entrada_identrada`, `Platillo_Fuerte_idplatillo`, `bebidas_idbebida`, `Adicionales_idadicional`, `estatus_idtipoS`, `cantidad de personas`) VALUES ('2', '2', '2', '2', '5', '4', '1', '1', '1');
INSERT INTO `restaurante`.`orden` (`idorden`, `cliente_idcliente`, `postres_idpostre`, `entrada_identrada`, `Platillo_Fuerte_idplatillo`, `bebidas_idbebida`, `Adicionales_idadicional`, `estatus_idtipoS`, `cantidad de personas`) VALUES ('3', '3', '1', '1', '2', '1', '2', '1', '1');

INSERT INTO `restaurante`.`ornedes_mesa` (`orden_idorden`, `Mesa_idMesa`) VALUES ('1', '1');
INSERT INTO `restaurante`.`ornedes_mesa` (`orden_idorden`, `Mesa_idMesa`) VALUES ('2', '1');
INSERT INTO `restaurante`.`ornedes_mesa` (`orden_idorden`, `Mesa_idMesa`) VALUES ('3', '1');

ALTER TABLE `restaurante`.`factura` 
DROP FOREIGN KEY `fk_factura_orden1`;
ALTER TABLE `restaurante`.`factura` 
CHANGE COLUMN `orden_idorden` `Mesa_idMesa` INT(11) NOT NULL ;
ALTER TABLE `restaurante`.`factura` 
ADD CONSTRAINT `fk_factura_idmesa`
FOREIGN KEY (`Mesa_idMesa`)
REFERENCES `restaurante`.`mesa` (`idmesa`)
ON DELETE NO ACTION
ON UPDATE NO ACTION;
  
INSERT INTO `restaurante`.`factura` (`idfactura`, `cliente_idcliente`, `Mesa_idMesa`) VALUES ('1', '1', '1');

ALTER TABLE `restaurante`.`platillo_fuerte` 
RENAME TO  `restaurante`.`platillo` ;

ALTER TABLE `restaurante`.`platillo` 
CHANGE COLUMN `Platillo fuerte` `Platillo` VARCHAR(45) NULL DEFAULT NULL ;




select e.Entrada, f.Platillo,  b.Bebida, p.Postre, a.Adicionales, c.Nombre, 
(e.precio+f.precio+b.precio+p.precio+a.precio) as total from entrada e 
inner join platillo f on e.identrada=f.idplatillo
inner join bebidas b on f.idplatillo=b.idbebida
inner join postres p on b.idbebida=p.idpostre
inner join cliente c on p.idpostre=c.idcliente
inner join adicionales a on c.idcliente=a.idadicional







  
